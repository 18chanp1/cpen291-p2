"use strict";(self["webpackChunkvue_frontend"]=self["webpackChunkvue_frontend"]||[]).push([[35],{3656:function(t,e,n){n.r(e),n.d(e,{default:function(){return D}});var o=n(3396),s=n(9242),l=n(7139);const u={class:"General"},i=(0,o._)("h1",null,"Music Input",-1),r=(0,o._)("h2",null,"Option 1: Text Input",-1),a=(0,o._)("p",null," To input your song, please prepare the following information: ",-1),c=(0,o._)("ol",null,[(0,o._)("li",null,"The pitch of each note (e.g. C)"),(0,o._)("li",null,"The length of each note (e.g. 1 relative unit)")],-1),d=(0,o._)("p",null," Type in chronological order, the pitch of each note, followed by the relative length of each note. Do not include spaces. ",-1),p=(0,o._)("p",null," For example, if you wish to play the note C for 1 RU, followed by the note B for 2 RU, you would input the following: ",-1),h=(0,o._)("p",null," C1B2 ",-1),m=(0,o._)("br",null,null,-1),b=(0,o._)("input",{type:"submit",value:"Submit",class:"flexbut",id:"ButtonForSubmit"},null,-1),f=(0,o._)("h2",null,"Option 2: Button Input",-1),g=(0,o._)("p",null," Push the buttons to input the corresponding note. The duration defaults to 1 RU. ",-1),_={class:"noteInput"},y=(0,o._)("p",null," Your Input: ",-1),w={class:"inputdisp"},v={class:"submitButtons"},x={id:"snackbar"},B={id:"snackbarG"};function k(t,e,n,k,P,S){const I=(0,o.up)("std_but");return(0,o.wg)(),(0,o.iD)("div",u,[i,r,a,c,d,p,h,(0,o._)("form",{onSubmit:e[1]||(e[1]=(0,s.iM)(((...t)=>S.submitForm&&S.submitForm(...t)),["prevent"]))},[(0,o.wy)((0,o._)("textarea",{"onUpdate:modelValue":e[0]||(e[0]=t=>P.typedscript=t)},"Input your music here.",512),[[s.nr,P.typedscript]]),m,b],32),f,g,(0,o._)("form",{onSubmit:e[12]||(e[12]=(0,s.iM)(((...t)=>S.submitBut&&S.submitBut(...t)),["prevent"]))},[(0,o._)("div",_,[(0,o.Wm)(I,{type:"button",onPressedButton:e[2]||(e[2]=t=>S.clicked(t)),class:"flexbut",text:"C"}),(0,o.Wm)(I,{type:"button",onPressedButton:e[3]||(e[3]=t=>S.clicked(t)),class:"flexbut",text:"D"}),(0,o.Wm)(I,{type:"button",onPressedButton:e[4]||(e[4]=t=>S.clicked(t)),class:"flexbut",text:"E"}),(0,o.Wm)(I,{type:"button",onPressedButton:e[5]||(e[5]=t=>S.clicked(t)),class:"flexbut",text:"F"}),(0,o.Wm)(I,{type:"button",onPressedButton:e[6]||(e[6]=t=>S.clicked(t)),class:"flexbut",text:"G"}),(0,o.Wm)(I,{type:"button",onPressedButton:e[7]||(e[7]=t=>S.clicked(t)),class:"flexbut",text:"A"}),(0,o.Wm)(I,{type:"button",onPressedButton:e[8]||(e[8]=t=>S.clicked(t)),class:"flexbut",text:"B"}),(0,o.Wm)(I,{type:"button",onPressedButton:e[9]||(e[9]=t=>S.clicked(t)),class:"flexbut",text:"R"})]),y,(0,o._)("p",w,(0,l.zw)(this.script),1),(0,o._)("div",v,[(0,o.Wm)(I,{type:"button",onPressedButton:e[10]||(e[10]=t=>S.reset()),text:"Reset",class:"flexbut2"}),(0,o.Wm)(I,{onPressedButton:e[11]||(e[11]=e=>t.submit()),text:"Submit",class:"flexbut2"})]),(0,o._)("div",x,(0,l.zw)(P.error),1),(0,o._)("div",B,(0,l.zw)(P.error),1)],32)])}function P(t,e,n,s,u,i){return(0,o.wg)(),(0,o.iD)("button",{onClick:e[0]||(e[0]=t=>i.clicked())},(0,l.zw)(n.text),1)}var S={name:"std_but",props:{text:String},data(){return{count:0}},methods:{clicked(){this.count++,this.$emit("pressed-button",this.text.concat(1))}}},I=n(89);const T=(0,I.Z)(S,[["render",P]]);var W=T,G=n(6265),N=n.n(G),z={name:"musicInput",data(){return{count:0,script:"",typedscript:"",error:""}},components:{std_but:W},methods:{clicked(t){this.count++,this.script=this.script.concat(t)},reset(){this.script=""},async submitForm(){var t=/^(([A-GR][1-9]+)*)$/;if(console.log(t.test(this.typedscript)),t.test(this.typedscript)){console.log("submitted, typed");const t={type:"MusicInTyped",arguments:this.typedscript};await N().post("/api/input/",t).then((t=>{console.log(t),this.showBar("Submission accepted. You will now be redirected home","G"),setTimeout(this.redirectHome,2500)})).catch((t=>{console.log(t),this.showBar("Server error. Please try again later.","")}))}else console.log("inputerr"),this.showBar("Input error. Please study the input format in detail.","")},async submitBut(){console.log("submitted, button");const t={type:"MusicInButtoned",arguments:this.script};await N().post("/api/input/",t).then((t=>{console.log(t),this.showBar("Submission accepted. You will now be redirected home","G"),setTimeout(this.redirectHome,2500)})).catch((t=>{console.log(t),this.showBar("Server error. Please try again later.","")}))},showBar(t,e){this.error=t;var n=document.getElementById("snackbar"+e);n.className="show",setTimeout((function(){n.className=n.className.replace("show","")}),3e3)},redirectHome(){this.$router.push("/")}}};const C=(0,I.Z)(z,[["render",k]]);var D=C},100:function(t,e,n){n.r(e),n.d(e,{default:function(){return g}});var o=n(3396),s=n(7139);const l={class:"General"},u=(0,o._)("h1",null,"Statistics",-1),i={class:"General"},r=(0,o._)("th",null,"Your favorite note",-1),a=(0,o._)("th",null,"Lifetime notes played",-1),c=(0,o._)("th",null,"Total song uploads",-1);function d(t,e,n,d,p,h){return(0,o.wg)(),(0,o.iD)("div",l,[u,(0,o._)("table",i,[(0,o._)("tr",null,[r,(0,o._)("td",null,(0,s.zw)(this.favnote),1)]),(0,o._)("tr",null,[a,(0,o._)("td",null,(0,s.zw)(this.lifnote),1)]),(0,o._)("tr",null,[c,(0,o._)("td",null,(0,s.zw)(this.songs),1)])])])}var p=n(6265),h=n.n(p),m={name:"statsPage",data(){return{favnote:"No data",lifnote:"No data",songs:"No data"}},mounted(){this.getData()},methods:{async getData(){console.log("getting data"),await h().get("/api/stats").then((t=>{console.log(t),this.favnote=t.favoriteNote,this.lifnote=t.lifetimeNotes,this.songs=t.numberOfSongs})).catch((t=>{console.log(t)}))}}},b=n(89);const f=(0,b.Z)(m,[["render",d]]);var g=f}}]);
//# sourceMappingURL=musicInput.655fb7e8.js.map