{"ast":null,"code":"import axios from 'axios';\nimport drop_down from '/src/components/drop_down.vue'; // import std_but from '/src/components/std_but.vue'\n\nexport default {\n  name: 'homePage',\n\n  data() {\n    return {\n      status: 'Loading'\n    };\n  },\n\n  mounted() {\n    this.pollStatusWrapper();\n  },\n\n  methods: {\n    clicked() {\n      console.log('oi');\n      this.$router.push('/about');\n    },\n\n    async pollStatus() {\n      console.log('getting data');\n      var elem = document.getElementById(\"statusIndicator\");\n      await axios.get('/api/status').then(response => {\n        console.log(response);\n\n        if (this.status == 'PLAYING') {\n          elem.className = \"statusGreen\";\n        }\n\n        this.status = response.data;\n      }).catch(error => {\n        elem.className = \"statusRed\";\n        this.status = \"Failed to fetch status of robot\";\n        console.log(error);\n      });\n    },\n\n    pollStatusWrapper() {\n      setInterval(this.pollStatus, 4000);\n    }\n\n  },\n  components: {\n    drop_down\n  }\n};","map":{"version":3,"mappings":"AA8BE,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,+BAAtB,C,CACA;;AACA,eAAe;AACbC,MAAI,EAAE,UADO;;AAEbC,MAAI,GAAG;AACL,WAAM;AACJC,YAAM,EAAE;AADJ,KAAN;AAGD,GANY;;AAMVC,SAAM,GAAI;AACX,SAAKC,iBAAL;AACD,GARY;;AASbC,SAAO,EAAE;AACPC,WAAM,GAAI;AACRC,aAAO,CAACC,GAAR,CAAY,IAAZ;AACA,WAAKC,OAAL,CAAaC,IAAb,CAAkB,QAAlB;AACD,KAJM;;AAKP,UAAMC,UAAN,GAAkB;AAChBJ,aAAO,CAACC,GAAR,CAAY,cAAZ;AACA,UAAII,IAAG,GAAIC,QAAQ,CAACC,cAAT,CAAwB,iBAAxB,CAAX;AACE,YAAMhB,KAAI,CACPiB,GADG,CACC,aADD,EAEHC,IAFG,CAEEC,QAAO,IAAI;AACfV,eAAO,CAACC,GAAR,CAAYS,QAAZ;;AAEA,YAAG,KAAKf,MAAL,IAAe,SAAlB,EAA4B;AAC1BU,cAAI,CAACM,SAAL,GAAiB,aAAjB;AACF;;AAEA,aAAKhB,MAAL,GAAce,QAAQ,CAAChB,IAAvB;AAID,OAbG,EAaDkB,KAbC,CAaKC,KAAI,IAAK;AAChBR,YAAI,CAACM,SAAL,GAAiB,WAAjB;AACA,aAAKhB,MAAL,GAAc,iCAAd;AACAK,eAAO,CAACC,GAAR,CAAYY,KAAZ;AACD,OAjBG,CAAN;AAkBH,KA1BM;;AA2BPhB,qBAAiB,GAAG;AAClBiB,iBAAW,CAAC,KAAKV,UAAN,EAAkB,IAAlB,CAAX;AACD;;AA7BM,GATI;AAwCbW,YAAU,EAAC;AACTvB;AADS;AAxCE,CAAf","names":["axios","drop_down","name","data","status","mounted","pollStatusWrapper","methods","clicked","console","log","$router","push","pollStatus","elem","document","getElementById","get","then","response","className","catch","error","setInterval","components"],"sourceRoot":"","sources":["/Users/18chanp1/Library/CloudStorage/OneDrive-UBC/Active Use/UBC/20 Year 2/16 CPEN 291/04 Projects/P2_A_G20/main_server/vue-frontend/src/views/HomeView.vue"],"sourcesContent":["<template>\n  <div class=\"General\">\n    <h1>The Music Player</h1>\n\n    <p> Welcome to our music player. We have poured in\n      our hearts and our souls into this music player, \n      we hope you will enjoy the wonderful tunes and \n      the educational musical experiences this robot.\n    </p>\n\n    <h2>Robot status</h2>\n    <div id = statusIndicator class=\"statusYellow\">\n      {{this.status}}\n    </div>\n    <!-- <std_but type = \"button\" @pressed-button = \"clicked($event)\" class=\"flexbut\" text = \"cunt\"/> -->\n\n    <h2>Robot Locker</h2>\n    <p>\n      Use the toggle to lock \n    </p>\n\n    <h2>Music selector</h2>\n    <p>Select from your choice of music here</p>\n    <drop_down></drop_down>\n\n\n  </div>\n</template>\n\n<script>\n  import axios from 'axios'\n  import drop_down from '/src/components/drop_down.vue'\n  // import std_but from '/src/components/std_but.vue'\n  export default {\n    name: 'homePage',\n    data() { \n      return{\n        status: 'Loading'\n      }\n    }, mounted (){\n      this.pollStatusWrapper()\n    },\n    methods: {\n      clicked (){\n        console.log('oi')\n        this.$router.push('/about');\n      },\n      async pollStatus(){\n        console.log('getting data') \n        var elem = document.getElementById(\"statusIndicator\")    \n          await axios \n            .get('/api/status')\n            .then(response =>{\n              console.log(response)\n\n              if(this.status == 'PLAYING'){\n                elem.className = \"statusGreen\"\n              }\n              \n              this.status = response.data\n\n              \n              \n            }).catch(error => {\n              elem.className = \"statusRed\"\n              this.status = \"Failed to fetch status of robot\"\n              console.log(error)\n            })\n      },\n      pollStatusWrapper() {\n        setInterval(this.pollStatus, 4000)\n      },\n    },\n    components:{\n      drop_down,\n    }\n  }\n</script>\n\n\n<style>\n h1{\n    font-family: Lato-Semibold;\n    font-size: 38px;\n    text-align: left;\n    border-bottom: 1px solid #af3c43;\n    border-bottom-color: rgb(175, 60, 67);\n    border-bottom-style: solid;\n    border-bottom-width: 1px;\n    margin-bottom: .2em;\n    margin-top: 1em;\n    padding-bottom: .2em;\n  }\n   h2{\n    font-family: Lato-SemiBold;\n    font-size: 34px;\n    text-align: left;\n    margin-bottom: 11.5px;\n    margin-top: 38px;\n  }\n  p {\n    font-family: Noto Sans;\n    font-size: 20px;\n    font-weight: 500;\n    text-align: left;\n    max-width: 65ch;\n  }\n  ol {\n    font-family: Noto Sans;\n    font-size: 20px;\n    font-weight: 500;\n    text-align: left;\n    max-width: 65ch;\n  }\n  .General{\n    margin: auto;\n    max-width: 55ch;\n    text-align: left;\n    justify-content: left;\n    font-family: Noto Sans;\n    font-size: 20px;\n    font-weight: 500;\n    text-align: left;\n  }\n  \n  th {\n    min-width: 65vw;\n    }\n  \n  @media only screen and (min-width: 768px) {\n    th {\n    min-width: 20em;\n    }\n  }\n  \n  .flexbut{\n    font-family: Noto Sans;\n    background-color: #26374a;\n    color:white;\n    margin: 3px;\n    padding: 20px;\n    font-size: 20px;\n    text-align: center;\n    border-radius: 4px;\n    border: none;\n  }\n\n  .statusGreen{\n    background-color: rgb(0,112,60);\n    color:white;\n    border-color: grey;\n  }\n\n  .statusRed{\n    background-color: rgb(227,24,55);\n    color:white;\n    border-color: grey;\n  }\n\n  .statusYellow{\n    background-color: rgb(255,210,0);\n    color:black;\n    border-color: black;\n    border-style: solid;\n  }\n\n  #statusIndicator{\n    min-height: 50px;\n    text-align: center;\n    line-height: 100px; \n    font-weight: bold;\n    font-size: 25px;\n    border-radius: 4px;\n    border-style: solid;\n  }\n\n\n\n</style>"]},"metadata":{},"sourceType":"module"}