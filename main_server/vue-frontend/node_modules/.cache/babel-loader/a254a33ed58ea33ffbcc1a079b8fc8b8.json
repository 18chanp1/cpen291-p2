{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"General\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"The Music Player\", -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"p\", null, \" Welcome to our music player. We have poured in our hearts and our souls into this music player, we hope you will enjoy the wonderful tunes and the educational musical experiences this robot. \", -1\n/* HOISTED */\n);\n\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Robot status\", -1\n/* HOISTED */\n);\n\nconst _hoisted_5 = {\n  id: \"statusIndicator\",\n  class: \"statusYellow\"\n};\n\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Robot Mode\", -1\n/* HOISTED */\n);\n\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"p\", null, \" Use the toggle to select the mode of operation for the robot. \", -1\n/* HOISTED */\n);\n\nconst _hoisted_8 = {\n  class: \"switch\"\n};\n\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"slider\"\n}, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Music selector\", -1\n/* HOISTED */\n);\n\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Select from your choice of music here\", -1\n/* HOISTED */\n);\n\nconst _hoisted_12 = {\n  class: \"dd\"\n};\n\nconst _hoisted_13 = /*#__PURE__*/_createTextVNode(\"Tetis\");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_drop_down = _resolveComponent(\"drop_down\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _hoisted_3, _hoisted_4, _createElementVNode(\"div\", _hoisted_5, _toDisplayString(this.status), 1\n  /* TEXT */\n  ), _createCommentVNode(\" <std_but type = \\\"button\\\" @pressed-button = \\\"clicked($event)\\\" class=\\\"flexbut\\\" text = \\\"cunt\\\"/> \"), _hoisted_6, _hoisted_7, _createElementVNode(\"label\", _hoisted_8, [_createElementVNode(\"input\", {\n    onClick: _cache[0] || (_cache[0] = $event => $options.switched()),\n    type: \"checkbox\"\n  }), _hoisted_9]), _hoisted_10, _hoisted_11, _createElementVNode(\"div\", _hoisted_12, [_createVNode(_component_drop_down, null, {\n    default: _withCtx(() => [_hoisted_13]),\n    _: 1\n    /* STABLE */\n\n  })])]);\n}","map":{"version":3,"mappings":";;AACOA,OAAK,EAAC;;;gCACTC,oBAAyB,IAAzB,EAAyB,IAAzB,EAAI,kBAAJ,EAAoB;AAAA;AAApB;;gCAEAA,oBAII,GAJJ,EAII,IAJJ,EAAG,kMAAH,EAIA;AAAA;AAJA;;gCAMAA,oBAAqB,IAArB,EAAqB,IAArB,EAAI,cAAJ,EAAgB;AAAA;AAAhB;;;AACKC,IAAE,EAAG;AAAgBF,OAAK,EAAC;;;gCAKhCC,oBAAmB,IAAnB,EAAmB,IAAnB,EAAI,YAAJ,EAAc;AAAA;AAAd;;gCACAA,oBAEI,GAFJ,EAEI,IAFJ,EAAG,iEAAH,EAEA;AAAA;AAFA;;;AAIOD,OAAK,EAAC;;;gCAEXC,oBAA4B,MAA5B,EAA4B;AAAtBD,OAAK,EAAC;AAAgB,CAA5B,EAAoB,IAApB,EAAoB;AAAA;AAApB;;iCAIFC,oBAAuB,IAAvB,EAAuB,IAAvB,EAAI,gBAAJ,EAAkB;AAAA;AAAlB;;iCACAA,oBAA4C,GAA5C,EAA4C,IAA5C,EAAG,uCAAH,EAAwC;AAAA;AAAxC;;;AACKD,OAAK,EAAG;;;kDACF;;;;;uBA7BbG,oBAgCM,KAhCN,cAgCM,CA/BJC,UA+BI,EA7BJC,UA6BI,EAvBJC,UAuBI,EAtBJL,oBAEM,KAFN,cAEMM,sBADGC,MACH,CAFN,EACe;AAAA;AADf,GAsBI,EAnBJC,6HAmBI,EAjBJC,UAiBI,EAhBJC,UAgBI,EAZJV,oBAGQ,OAHR,cAGQ,CAFNA,oBAA6C,OAA7C,EAA6C;AAArCW,WAAK,sCAAIC,mBAAJ,CAAgC;AAAhBC,QAAI,EAAC;AAAW,GAA7C,CAEM,EADNC,UACM,CAHR,CAYI,EANJC,WAMI,EALJC,WAKI,EAJJhB,oBAEM,KAFN,eAEM,CADNiB,aAA4BC,oBAA5B,EAA4B,IAA5B,EAA4B;sBAAjB,MAAK,cAAY;;;;AAAA,GAA5B,CACM,CAFN,CAII,CAhCN","names":["class","_createElementVNode","id","_createElementBlock","_hoisted_2","_hoisted_3","_hoisted_4","_toDisplayString","status","_createCommentVNode","_hoisted_6","_hoisted_7","onClick","$options","type","_hoisted_9","_hoisted_10","_hoisted_11","_createVNode","_component_drop_down"],"sourceRoot":"","sources":["/Users/18chanp1/Library/CloudStorage/OneDrive-UBC/Active Use/UBC/20 Year 2/16 CPEN 291/04 Projects/P2_A_G20/main_server/vue-frontend/src/views/HomeView.vue"],"sourcesContent":["<template>\n  <div class=\"General\">\n    <h1>The Music Player</h1>\n\n    <p> Welcome to our music player. We have poured in\n      our hearts and our souls into this music player, \n      we hope you will enjoy the wonderful tunes and \n      the educational musical experiences this robot.\n    </p>\n\n    <h2>Robot status</h2>\n    <div id = statusIndicator class=\"statusYellow\">\n      {{this.status}}\n    </div>\n    <!-- <std_but type = \"button\" @pressed-button = \"clicked($event)\" class=\"flexbut\" text = \"cunt\"/> -->\n\n    <h2>Robot Mode</h2>\n    <p>\n      Use the toggle to select the mode of operation for the robot. \n    </p>\n\n    <label class=\"switch\">\n      <input @click = \"switched()\" type=\"checkbox\">\n      <span class=\"slider\"></span>\n    </label>\n\n\n    <h2>Music selector</h2>\n    <p>Select from your choice of music here</p>\n    <div class = dd>\n    <drop_down>Tetis</drop_down>\n    </div>\n\n  </div>\n</template>\n\n<script>\n  import axios from 'axios'\n  import drop_down from '/src/components/drop_down.vue'\n  // import std_but from '/src/components/std_but.vue'\n  export default {\n    name: 'homePage',\n    data() { \n      return{\n        status: 'Loading',\n        selector: ''\n      }\n    }, mounted (){\n      this.pollStatusWrapper()\n    },\n    methods: {\n      clicked (){\n        console.log('oi')\n        this.$router.push('/about');\n      },\n      async pollStatus(){\n        console.log('getting data') \n        var elem = document.getElementById(\"statusIndicator\")    \n          await axios \n            .get('/api/status')\n            .then(response =>{\n              console.log(response)\n\n              if(this.status == 'PLAYING'){\n                elem.className = \"statusGreen\"\n              }\n              \n              this.status = response.data\n\n              \n              \n            }).catch(error => {\n              elem.className = \"statusRed\"\n              this.status = \"Failed to fetch status of robot\"\n              console.log(error)\n            })\n      },\n      pollStatusWrapper() {\n        setInterval(this.pollStatus, 4000)\n      },\n      switched(){\n\n      }\n    },\n    components:{\n      drop_down,\n    }\n  }\n</script>\n\n\n<style>\n h1{\n    font-family: Lato-Semibold;\n    font-size: 38px;\n    text-align: left;\n    border-bottom: 1px solid #af3c43;\n    border-bottom-color: rgb(175, 60, 67);\n    border-bottom-style: solid;\n    border-bottom-width: 1px;\n    margin-bottom: .2em;\n    margin-top: 1em;\n    padding-bottom: .2em;\n  }\n   h2{\n    font-family: Lato-SemiBold;\n    font-size: 34px;\n    text-align: left;\n    margin-bottom: 11.5px;\n    margin-top: 38px;\n  }\n  p {\n    font-family: Noto Sans;\n    font-size: 20px;\n    font-weight: 500;\n    text-align: left;\n    max-width: 65ch;\n  }\n  ol {\n    font-family: Noto Sans;\n    font-size: 20px;\n    font-weight: 500;\n    text-align: left;\n    max-width: 65ch;\n  }\n  .General{\n    margin: auto;\n    max-width: 55ch;\n    text-align: left;\n    justify-content: left;\n    font-family: Noto Sans;\n    font-size: 20px;\n    font-weight: 500;\n    text-align: left;\n  }\n  \n  th {\n    min-width: 65vw;\n    }\n  \n  @media only screen and (min-width: 768px) {\n    th {\n    min-width: 20em;\n    }\n  }\n  \n  .flexbut{\n    font-family: Noto Sans;\n    background-color: #26374a;\n    color:white;\n    margin: 3px;\n    padding: 20px;\n    font-size: 20px;\n    text-align: center;\n    border-radius: 4px;\n    border: none;\n  }\n\n  .statusGreen{\n    background-color: rgb(0,112,60);\n    color:white;\n    border-color: grey;\n  }\n\n  .statusRed{\n    background-color: rgb(227,24,55);\n    color:white;\n    border-color: grey;\n  }\n\n  .statusYellow{\n    background-color: rgb(255,210,0);\n    color:black;\n    border-color: black;\n    border-style: solid;\n  }\n\n  #statusIndicator{\n    min-height: 50px;\n    text-align: center;\n    line-height: 100px; \n    font-weight: bold;\n    font-size: 25px;\n    border-radius: 4px;\n    border-style: solid;\n  }\n\n  .dd{\n    margin-bottom: 5em;\n  }\n\n   /* The switch - the box around the slider */\n.switch {\n  position: relative;\n  display: inline-block;\n  width: 60px;\n  height: 34px;\n}\n\n/* Hide default HTML checkbox */\n.switch input {\n  opacity: 0;\n  width: 0;\n  height: 0;\n}\n\n/* The slider */\n.slider {\n  position: absolute;\n  cursor: pointer;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: #ccc;\n  -webkit-transition: .4s;\n  transition: .4s;\n}\n\n.slider:before {\n  position: absolute;\n  content: \"\";\n  height: 26px;\n  width: 26px;\n  left: 4px;\n  bottom: 4px;\n  background-color: white;\n  -webkit-transition: .4s;\n  transition: .4s;\n}\n\ninput:checked + .slider {\n  background-color: #2196F3;\n}\n\ninput:focus + .slider {\n  box-shadow: 0 0 1px #2196F3;\n}\n\ninput:checked + .slider:before {\n  -webkit-transform: translateX(26px);\n  -ms-transform: translateX(26px);\n  transform: translateX(26px);\n}\n\n/* Rounded sliders */\n.slider.round {\n  border-radius: 34px;\n}\n\n.slider.round:before {\n  border-radius: 50%;\n} \n\n\n\n</style>"]},"metadata":{},"sourceType":"module"}