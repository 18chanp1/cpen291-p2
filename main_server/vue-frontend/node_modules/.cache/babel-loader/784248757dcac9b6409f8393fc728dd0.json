{"ast":null,"code":"import std_but from \"/src/components/std_but.vue\";\nimport axios from 'axios';\nexport default {\n  name: 'musicInput',\n\n  data() {\n    return {\n      count: 0,\n      script: '',\n      typedscript: ''\n    };\n  },\n\n  components: {\n    std_but\n  },\n  methods: {\n    clicked(nextchar) {\n      this.count++;\n      this.script = this.script.concat(nextchar);\n    },\n\n    reset() {\n      this.script = '';\n    },\n\n    async submitForm() {\n      let pattern = /e/;\n\n      if (pattern.test(this.typedscript)) {\n        console.log('submitted, typed');\n        const request = {\n          type: 'MusicInTyped',\n          arguments: this.typedscript\n        };\n        await axios.post('/api/typedrequest/', request).then(response => {\n          console.log(response);\n        }).catch(error => {\n          console.log(error);\n        });\n      } else {\n        console.log('inputerr');\n      }\n    },\n\n    async submitBut() {\n      console.log('submitted, button');\n      const request = {\n        type: 'MusicInButtoned',\n        arguments: this.script\n      };\n      await axios.post('/api/typedrequest/', request).then(response => {\n        console.log(response);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAwEA,OAAOA,OAAP,MAAoB,6BAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEE,eAAc;AAEZC,MAAI,EAAE,YAFM;;AAGZC,MAAI,GAAE;AACF,WAAM;AACFC,WAAK,EAAC,CADJ;AAEFC,YAAM,EAAE,EAFN;AAGFC,iBAAW,EAAC;AAHV,KAAN;AAKH,GATW;;AAUZC,YAAU,EAAC;AACTP;AADS,GAVC;AAaZQ,SAAO,EAAC;AACJC,WAAO,CAACC,QAAD,EAAU;AACf,WAAKN,KAAL;AACA,WAAKC,MAAL,GAAc,KAAKA,MAAL,CAAYM,MAAZ,CAAmBD,QAAnB,CAAd;AACD,KAJG;;AAKJE,SAAK,GAAE;AACL,WAAKP,MAAL,GAAY,EAAZ;AACD,KAPG;;AAQJ,UAAMQ,UAAN,GAAkB;AAChB,UAAIC,OAAM,GAAI,GAAd;;AACA,UAAGA,OAAO,CAACC,IAAR,CAAa,KAAKT,WAAlB,CAAH,EAAkC;AAChCU,eAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,cAAMC,OAAM,GAAI;AACdC,cAAI,EAAE,cADQ;AAEdC,mBAAS,EAAE,KAAKd;AAFF,SAAhB;AAKA,cAAML,KAAI,CACPoB,IADG,CACE,oBADF,EACwBH,OADxB,EAEHI,IAFG,CAEEC,QAAO,IAAI;AACfP,iBAAO,CAACC,GAAR,CAAYM,QAAZ;AACD,SAJG,EAIDC,KAJC,CAIKC,KAAI,IAAK;AAChBT,iBAAO,CAACC,GAAR,CAAYQ,KAAZ;AACD,SANG,CAAN;AAOF,OAdA,MAcO;AACLT,eAAO,CAACC,GAAR,CAAY,UAAZ;AACF;AACD,KA3BG;;AA2BF,UAAMS,SAAN,GAAiB;AACjBV,aAAO,CAACC,GAAR,CAAY,mBAAZ;AACA,YAAMC,OAAM,GAAI;AACdC,YAAI,EAAE,iBADQ;AAEdC,iBAAS,EAAE,KAAKf;AAFF,OAAhB;AAKA,YAAMJ,KAAI,CACPoB,IADG,CACE,oBADF,EACwBH,OADxB,EAEHI,IAFG,CAEEC,QAAO,IAAI;AACfP,eAAO,CAACC,GAAR,CAAYM,QAAZ;AACD,OAJG,EAIDC,KAJC,CAIKC,KAAI,IAAK;AAChBT,eAAO,CAACC,GAAR,CAAYQ,KAAZ;AACD,OANG,CAAN;AAOC;;AAzCC;AAbI,CAAd","names":["std_but","axios","name","data","count","script","typedscript","components","methods","clicked","nextchar","concat","reset","submitForm","pattern","test","console","log","request","type","arguments","post","then","response","catch","error","submitBut"],"sourceRoot":"","sources":["/Users/18chanp1/Desktop/fsa/P2_A_G20/music_control_webapp/vue-frontend/src/views/musicInput.vue"],"sourcesContent":["<template>\n<div class = \"General\">\n  <h1>Upload Music</h1>\n  <hr>\n\n  <h2>Option 1: Text Input</h2>\n  <p>\n    To input your song, please prepare the following information:\n    \n  </p>\n  <ol>\n    <li>The pitch of each note (e.g. C)</li>\n    <li>The length of each note (e.g. 1 relative unit)</li>\n  </ol>\n\n  <p>\n    Insert information on units here\n\n    Type in chronological order, the pitch of each note, followed by the length \n    of each note. Do not include spaces. \n  </p>\n\n  <p>\n    For example, if you wish to play the note C for 1 RU, followed by the note\n    B for 2 RU, you would input the following:\n  </p>\n\n  <p>\n    c1b2 \n  </p>\n\n  <form @submit.prevent=\"submitForm\">\n    <textarea cols = '65' rows = '3' v-model = \"typedscript\">Input your music here.</textarea>\n    <input type=\"submit\" value=\"Submit\" class = \"flexbut\">\n  </form>   \n  \n  <h2>Option 2: Button Input</h2>\n  \n  <p>\n    Push the buttons to input the corresponding note. The duration\n    defaults to 1 RU.\n  </p>\n\n  <form @submit.prevent = \"submitBut\">\n    <div class=\"noteInput\">\n      <std_but type = \"button\" @pressed-button = \"clicked($event)\" class=\"flexbut\" text = \"C\"/>\n      <std_but type = \"button\" @pressed-button = \"clicked($event)\" class=\"flexbut\" text = \"D\"/>\n      <std_but type = \"button\" @pressed-button = \"clicked($event)\" class=\"flexbut\" text = \"E\"/>\n      <std_but type = \"button\" @pressed-button = \"clicked($event)\" class=\"flexbut\" text = \"F\"/>\n      <std_but type = \"button\" @pressed-button = \"clicked($event)\" class=\"flexbut\" text = \"G\"/>\n      <std_but type = \"button\" @pressed-button = \"clicked($event)\" class=\"flexbut\" text = \"A\"/>\n      <std_but type = \"button\" @pressed-button = \"clicked($event)\" class=\"flexbut\" text = \"B\"/>\n      <std_but type = \"button\" @pressed-button = \"clicked($event)\" class=\"flexbut\" text = \"C\"/>\n    </div>\n\n    <p>\n      Your Input: \n    </p>\n\n    <p class=\"inputdisp\">{{this.script}} </p>\n\n    <div class=\"noteInput\">\n    <std_but type = \"button\" @pressed-button = \"reset()\" text = \"Reset\" class = \"flexbut\"/>\n    <std_but @pressed-button = \"submit()\" text = \"Submit\" class = \"flexbut\"/>\n    </div>\n    \n  </form>\n\n</div>\n</template>\n\n<script>\nimport std_but from \"/src/components/std_but.vue\"\nimport axios from 'axios'\n\n  export default{\n    \n    name: 'musicInput',\n    data(){\n        return{\n            count:0,\n            script: '',\n            typedscript:'',\n        }\n    },\n    components:{\n      std_but,\n    },\n    methods:{\n        clicked(nextchar){\n          this.count++\n          this.script = this.script.concat(nextchar)\n        },\n        reset(){\n          this.script=''\n        },\n        async submitForm(){\n          let pattern = /e/\n          if(pattern.test(this.typedscript)){\n            console.log('submitted, typed')\n            const request = {\n              type: 'MusicInTyped',\n              arguments: this.typedscript,\n            }\n            \n            await axios \n              .post('/api/typedrequest/', request)\n              .then(response =>{\n                console.log(response)\n              }).catch(error => {\n                console.log(error)\n              })\n          } else {\n            console.log('inputerr')\n          }\n        },async submitBut(){\n          console.log('submitted, button')\n          const request = {\n            type: 'MusicInButtoned',\n            arguments: this.script,\n          }\n          \n          await axios \n            .post('/api/typedrequest/', request)\n            .then(response =>{\n              console.log(response)\n            }).catch(error => {\n              console.log(error)\n            })\n          },\n    }\n       \n    }\n\n</script>\n\n\n<style>\n  h1{\n    font-family: Lato;\n    font: 38px;\n    font-weight: bold;\n    text-align: left;\n    margin-bottom: 3px;\n  }\n\n  hr {\n    border-top: 0.2px solid red;\n\n  }\n\n  h2{\n    font-family: Lato;\n    font: 36px;\n    font-weight: bold;\n    text-align: left;\n  }\n\n  p {\n    font-family: Noto Sans;\n    font: 20px;\n    font-weight: 500;\n    text-align: left;\n    max-width: 65ch;\n  }\n\n  .General{\n    margin: auto;\n    max-width: 65ch;\n    justify-content: center;\n  }\n\n  .noteInput{\n    display: flex ;\n    background-color: #ffffff;\n    border-radius: 10px;\n    margin:10px;\n    padding: 30px;\n    justify-content: center;\n  }\n\n  /* .noteInput > div {\n    background-color: #f1f1f1;\n    margin: 3px;\n    padding: 20px;\n    font-size: 20px;\n    text-align: center;\n    border-radius: 10px;\n    flex-grow: 1;\n  } */\n\n  .flexbut{\n    background-color: #26374a;\n    color:white;\n    margin: 3px;\n    padding: 20px;\n    font-size: 20px;\n    text-align: center;\n    border-radius: 4px;\n    flex-grow: 1;\n    border: none;\n  }\n\n.flexbut:hover {\n  background-color: #1c578a;\n  outline:none;\n  }\n\n.button:active {\n  background-color: #16446c;\n  outline:none;\n}\n\n.inputdisp{\n  min-height: 30px;\n}\n\n.entryBox {\n  width: 205px; height: 39px\n}\n\n\n  \n\n</style>\n\n\n"]},"metadata":{},"sourceType":"module"}