{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"General\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"The Music Player\", -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"p\", null, \" Welcome to our music player. We have poured in our hearts and our souls into this music player, we hope you will enjoy the wonderful tunes and the educational musical experiences this robot. \", -1\n/* HOISTED */\n);\n\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Robot status\", -1\n/* HOISTED */\n);\n\nconst _hoisted_5 = {\n  id: \"statusIndicator\",\n  class: \"statusYellow\"\n};\n\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Robot Locker\", -1\n/* HOISTED */\n);\n\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"p\", null, \" Use the toggle to lock \", -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _hoisted_3, _hoisted_4, _createElementVNode(\"div\", _hoisted_5, _toDisplayString(this.status), 1\n  /* TEXT */\n  ), _createCommentVNode(\" <std_but type = \\\"button\\\" @pressed-button = \\\"clicked($event)\\\" class=\\\"flexbut\\\" text = \\\"cunt\\\"/> \"), _hoisted_6, _hoisted_7]);\n}","map":{"version":3,"mappings":";;AACOA,OAAK,EAAC;;;gCACTC,oBAAyB,IAAzB,EAAyB,IAAzB,EAAI,kBAAJ,EAAoB;AAAA;AAApB;;gCAEAA,oBAII,GAJJ,EAII,IAJJ,EAAG,kMAAH,EAIA;AAAA;AAJA;;gCAMAA,oBAAqB,IAArB,EAAqB,IAArB,EAAI,cAAJ,EAAgB;AAAA;AAAhB;;;AACKC,IAAE,EAAG;AAAgBF,OAAK,EAAC;;;gCAKhCC,oBAAqB,IAArB,EAAqB,IAArB,EAAI,cAAJ,EAAgB;AAAA;AAAhB;;gCACAA,oBAEI,GAFJ,EAEI,IAFJ,EAAG,0BAAH,EAEA;AAAA;AAFA;;;uBAhBFE,oBAqBM,KArBN,cAqBM,CApBJC,UAoBI,EAlBJC,UAkBI,EAZJC,UAYI,EAXJL,oBAEM,KAFN,cAEMM,sBADGC,MACH,CAFN,EACe;AAAA;AADf,GAWI,EARJC,6HAQI,EANJC,UAMI,EALJC,UAKI,CArBN","names":["class","_createElementVNode","id","_createElementBlock","_hoisted_2","_hoisted_3","_hoisted_4","_toDisplayString","status","_createCommentVNode","_hoisted_6","_hoisted_7"],"sourceRoot":"","sources":["/Users/18chanp1/Library/CloudStorage/OneDrive-UBC/Active Use/UBC/20 Year 2/16 CPEN 291/04 Projects/P2_A_G20/main_server/vue-frontend/src/views/HomeView.vue"],"sourcesContent":["<template>\n  <div class=\"General\">\n    <h1>The Music Player</h1>\n\n    <p> Welcome to our music player. We have poured in\n      our hearts and our souls into this music player, \n      we hope you will enjoy the wonderful tunes and \n      the educational musical experiences this robot.\n    </p>\n\n    <h2>Robot status</h2>\n    <div id = statusIndicator class=\"statusYellow\">\n      {{this.status}}\n    </div>\n    <!-- <std_but type = \"button\" @pressed-button = \"clicked($event)\" class=\"flexbut\" text = \"cunt\"/> -->\n\n    <h2>Robot Locker</h2>\n    <p>\n      Use the toggle to lock \n    </p>\n\n\n  </div>\n</template>\n\n<script>\n  import axios from 'axios'\n  // import std_but from '/src/components/std_but.vue'\n  export default {\n    name: 'homePage',\n    data() { \n      return{\n        status: 'Loading'\n      }\n    }, mounted (){\n      this.pollStatusWrapper()\n    },\n    methods: {\n      clicked (){\n        console.log('oi')\n        this.$router.push('/about');\n      },\n      async pollStatus(){\n        console.log('getting data') \n        var elem = document.getElementById(\"statusIndicator\")    \n          await axios \n            .get('/api/status')\n            .then(response =>{\n              console.log(response)\n              this.status = response.data\n\n              if(this.status == 'PLAYING'){\n                elem.className = \"statusGreen\"\n              }\n              \n            }).catch(error => {\n              elem.className = \"statusRed\"\n              this.status = \"Failed to fetch status of robot\"\n              console.log(error)\n            })\n      },\n      pollStatusWrapper() {\n        setInterval(this.pollStatus, 4000)\n      },\n    },\n    components:{\n      // std_but,\n    }\n  }\n</script>\n\n\n<style>\n h1{\n    font-family: Lato-Semibold;\n    font-size: 38px;\n    text-align: left;\n    border-bottom: 1px solid #af3c43;\n    border-bottom-color: rgb(175, 60, 67);\n    border-bottom-style: solid;\n    border-bottom-width: 1px;\n    margin-bottom: .2em;\n    margin-top: 1em;\n    padding-bottom: .2em;\n  }\n   h2{\n    font-family: Lato-SemiBold;\n    font-size: 34px;\n    text-align: left;\n    margin-bottom: 11.5px;\n    margin-top: 38px;\n  }\n  p {\n    font-family: Noto Sans;\n    font-size: 20px;\n    font-weight: 500;\n    text-align: left;\n    max-width: 65ch;\n  }\n  ol {\n    font-family: Noto Sans;\n    font-size: 20px;\n    font-weight: 500;\n    text-align: left;\n    max-width: 65ch;\n  }\n  .General{\n    margin: auto;\n    max-width: 55ch;\n    text-align: left;\n    justify-content: left;\n    font-family: Noto Sans;\n    font-size: 20px;\n    font-weight: 500;\n    text-align: left;\n  }\n  \n  th {\n    min-width: 65vw;\n    }\n  \n  @media only screen and (min-width: 768px) {\n    th {\n    min-width: 20em;\n    }\n  }\n  \n  .flexbut{\n    font-family: Noto Sans;\n    background-color: #26374a;\n    color:white;\n    margin: 3px;\n    padding: 20px;\n    font-size: 20px;\n    text-align: center;\n    border-radius: 4px;\n    border: none;\n  }\n\n  .statusGreen{\n    background-color: #8FBDD3\n  }\n\n  .statusRed{\n    background-color: #BB6464;\n    color:white;\n  }\n\n  .statusYellow{\n    background-color: rgb( 255,210,0);\n    color:black;\n  }\n\n\n\n</style>"]},"metadata":{},"sourceType":"module"}