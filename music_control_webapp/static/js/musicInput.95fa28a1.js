"use strict";(self["webpackChunkvue_frontend"]=self["webpackChunkvue_frontend"]||[]).push([[35],{8690:function(t,e,n){n.r(e),n.d(e,{default:function(){return D}});var s=n(3396),o=n(7139);const l={class:"General"},u=(0,s._)("h1",null,"Upload Music",-1),c=(0,s._)("hr",null,null,-1),i=(0,s._)("h2",null,"Option 1: Text Input",-1),r=(0,s._)("p",null," To input your song, please prepare the following information: ",-1),a=(0,s._)("ol",null,[(0,s._)("li",null,"The pitch of each note (e.g. C)"),(0,s._)("li",null,"The length of each note (e.g. 1 relative unit)")],-1),d=(0,s._)("p",null," Insert information on units here Type in chronological order, the pitch of each note, followed by the length of each note. Do not include spaces. ",-1),p=(0,s._)("p",null," For example, if you wish to play the note C for 1 RU, followed by the note B for 2 RU, you would input the following: ",-1),h=(0,s._)("p",null," c1b2 ",-1),f=(0,s.Uk)("     "),x=(0,s._)("h2",null,"Option 2: Button Input",-1),b=(0,s._)("p",null," Push the buttons to input the corresponding note. The duration defaults to 1 RU. ",-1),m={class:"noteInput"},_=(0,s._)("p",null," Your Input: ",-1),k={class:"inputdisp"},g={class:"noteInput"};function v(t,e,n,v,B,w){const W=(0,s.up)("text_entry"),P=(0,s.up)("std_but");return(0,s.wg)(),(0,s.iD)("div",l,[u,c,i,r,a,d,p,h,(0,s.Wm)(W,{class:"entryBox"}),f,(0,s.Wm)(P,{text:"Submit",class:"flexbut",id:"nSize"}),x,b,(0,s._)("div",m,[(0,s.Wm)(P,{onPressedButton:e[0]||(e[0]=t=>w.clicked(t)),class:"flexbut",text:"C"}),(0,s.Wm)(P,{onPressedButton:e[1]||(e[1]=t=>w.clicked(t)),class:"flexbut",text:"D"}),(0,s.Wm)(P,{onPressedButton:e[2]||(e[2]=t=>w.clicked(t)),class:"flexbut",text:"E"}),(0,s.Wm)(P,{onPressedButton:e[3]||(e[3]=t=>w.clicked(t)),class:"flexbut",text:"F"}),(0,s.Wm)(P,{onPressedButton:e[4]||(e[4]=t=>w.clicked(t)),class:"flexbut",text:"G"}),(0,s.Wm)(P,{onPressedButton:e[5]||(e[5]=t=>w.clicked(t)),class:"flexbut",text:"A"}),(0,s.Wm)(P,{onPressedButton:e[6]||(e[6]=t=>w.clicked(t)),class:"flexbut",text:"B"}),(0,s.Wm)(P,{onPressedButton:e[7]||(e[7]=t=>w.clicked(t)),class:"flexbut",text:"C"})]),_,(0,s._)("p",k,(0,o.zw)(this.script),1),(0,s._)("div",g,[(0,s.Wm)(P,{onPressedButton:e[8]||(e[8]=t=>w.reset()),text:"Reset",class:"flexbut"}),(0,s.Wm)(P,{onPressedButton:e[9]||(e[9]=e=>t.submit()),text:"Submit",class:"flexbut"})])])}function B(t,e,n,l,u,c){return(0,s.wg)(),(0,s.iD)("button",{onClick:e[0]||(e[0]=t=>c.clicked())},(0,o.zw)(n.text),1)}var w={name:"std_but",props:{text:String},data(){return{count:0}},methods:{clicked(){this.count++,this.$emit("pressed-button",this.text.concat(1))}}},W=n(89);const P=(0,W.Z)(w,[["render",B]]);var y=P,C=n(3830),I={name:"musicInput",data(){return{count:0,script:""}},components:{std_but:y,text_entry:C.Z},methods:{clicked(t){this.count++,this.script=this.script.concat(t)},reset(){this.script=""}}};const T=(0,W.Z)(I,[["render",v]]);var D=T},699:function(t,e,n){n.r(e),n.d(e,{default:function(){return d}});var s=n(3396);const o={class:"stats"},l=(0,s._)("h1",null,"This is an stats page",-1),u=[l];function c(t,e){return(0,s.wg)(),(0,s.iD)("div",o,u)}var i=n(89);const r={},a=(0,i.Z)(r,[["render",c]]);var d=a}}]);
//# sourceMappingURL=musicInput.95fa28a1.js.map