{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"General\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Upload Music\", -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Option 1: Text Input\", -1\n/* HOISTED */\n);\n\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"p\", null, \" To input your song, please prepare the following information: \", -1\n/* HOISTED */\n);\n\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"ol\", null, [/*#__PURE__*/_createElementVNode(\"li\", null, \"The pitch of each note (e.g. C)\"), /*#__PURE__*/_createElementVNode(\"li\", null, \"The length of each note (e.g. 1 relative unit)\")], -1\n/* HOISTED */\n);\n\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"p\", null, \" Insert information on units here Type in chronological order, the pitch of each note, followed by the length of each note. Do not include spaces. \", -1\n/* HOISTED */\n);\n\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"p\", null, \" For example, if you wish to play the note C for 1 RU, followed by the note B for 2 RU, you would input the following: \", -1\n/* HOISTED */\n);\n\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"p\", null, \" c1b2 \", -1\n/* HOISTED */\n);\n\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"input\", {\n  type: \"submit\",\n  value: \"Submit\",\n  class: \"flexbut\"\n}, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Option 2: Button Input\", -1\n/* HOISTED */\n);\n\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"p\", null, \" Push the buttons to input the corresponding note. The duration defaults to 1 RU. \", -1\n/* HOISTED */\n);\n\nconst _hoisted_13 = {\n  class: \"noteInput\"\n};\n\nconst _hoisted_14 = /*#__PURE__*/_createElementVNode(\"p\", null, \" Your Input: \", -1\n/* HOISTED */\n);\n\nconst _hoisted_15 = {\n  class: \"inputdisp\"\n};\nconst _hoisted_16 = {\n  class: \"noteInput\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_std_but = _resolveComponent(\"std_but\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _hoisted_3, _hoisted_4, _hoisted_5, _hoisted_6, _hoisted_7, _hoisted_8, _hoisted_9, _createElementVNode(\"form\", {\n    onSubmit: _cache[1] || (_cache[1] = _withModifiers((...args) => $options.submitForm && $options.submitForm(...args), [\"prevent\"]))\n  }, [_withDirectives(_createElementVNode(\"textarea\", {\n    cols: \"65\",\n    rows: \"3\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.typedscript = $event)\n  }, \"Input your music here.\", 512\n  /* NEED_PATCH */\n  ), [[_vModelText, _ctx.typedscript]]), _hoisted_10], 32\n  /* HYDRATE_EVENTS */\n  ), _hoisted_11, _hoisted_12, _createElementVNode(\"div\", _hoisted_13, [_createVNode(_component_std_but, {\n    onPressedButton: _cache[2] || (_cache[2] = $event => $options.clicked($event)),\n    class: \"flexbut\",\n    text: \"C\"\n  }), _createVNode(_component_std_but, {\n    onPressedButton: _cache[3] || (_cache[3] = $event => $options.clicked($event)),\n    class: \"flexbut\",\n    text: \"D\"\n  }), _createVNode(_component_std_but, {\n    onPressedButton: _cache[4] || (_cache[4] = $event => $options.clicked($event)),\n    class: \"flexbut\",\n    text: \"E\"\n  }), _createVNode(_component_std_but, {\n    onPressedButton: _cache[5] || (_cache[5] = $event => $options.clicked($event)),\n    class: \"flexbut\",\n    text: \"F\"\n  }), _createVNode(_component_std_but, {\n    onPressedButton: _cache[6] || (_cache[6] = $event => $options.clicked($event)),\n    class: \"flexbut\",\n    text: \"G\"\n  }), _createVNode(_component_std_but, {\n    onPressedButton: _cache[7] || (_cache[7] = $event => $options.clicked($event)),\n    class: \"flexbut\",\n    text: \"A\"\n  }), _createVNode(_component_std_but, {\n    onPressedButton: _cache[8] || (_cache[8] = $event => $options.clicked($event)),\n    class: \"flexbut\",\n    text: \"B\"\n  }), _createVNode(_component_std_but, {\n    onPressedButton: _cache[9] || (_cache[9] = $event => $options.clicked($event)),\n    class: \"flexbut\",\n    text: \"C\"\n  })]), _hoisted_14, _createElementVNode(\"p\", _hoisted_15, _toDisplayString(this.script), 1\n  /* TEXT */\n  ), _createElementVNode(\"div\", _hoisted_16, [_createVNode(_component_std_but, {\n    onPressedButton: _cache[10] || (_cache[10] = $event => $options.reset()),\n    text: \"Reset\",\n    class: \"flexbut\"\n  }), _createVNode(_component_std_but, {\n    onPressedButton: _cache[11] || (_cache[11] = $event => _ctx.submit()),\n    text: \"Submit\",\n    class: \"flexbut\"\n  })])]);\n}","map":{"version":3,"mappings":"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","names":["class","_createElementVNode","type","value","_createElementBlock","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","onSubmit","$options","cols","rows","_ctx","$event","_hoisted_10","_hoisted_11","_hoisted_12","_createVNode","_component_std_but","onPressedButton","text","_hoisted_14","_toDisplayString","script"],"sourceRoot":"","sources":["/Users/18chanp1/Library/CloudStorage/OneDrive-UBC/Active Use/UBC/20 Year 2/16 CPEN 291/04 Projects/P2_A_G20/music_control_webapp/vue-frontend/src/views/musicInput.vue"],"sourcesContent":["<template>\n<div class = \"General\">\n  <h1>Upload Music</h1>\n  <hr>\n\n  <h2>Option 1: Text Input</h2>\n  <p>\n    To input your song, please prepare the following information:\n    \n  </p>\n  <ol>\n    <li>The pitch of each note (e.g. C)</li>\n    <li>The length of each note (e.g. 1 relative unit)</li>\n  </ol>\n\n  <p>\n    Insert information on units here\n\n    Type in chronological order, the pitch of each note, followed by the length \n    of each note. Do not include spaces. \n  </p>\n\n  <p>\n    For example, if you wish to play the note C for 1 RU, followed by the note\n    B for 2 RU, you would input the following:\n  </p>\n\n  <p>\n    c1b2 \n  </p>\n\n  <form @submit.prevent=\"submitForm\">\n    <textarea cols = '65' rows = '3' v-model = \"typedscript\">Input your music here.</textarea>\n    <input type=\"submit\" value=\"Submit\" class = \"flexbut\">\n\n  </form>   \n  \n  <h2>Option 2: Button Input</h2>\n  \n  <p>\n    Push the buttons to input the corresponding note. The duration\n    defaults to 1 RU.\n  </p>\n\n  <div class=\"noteInput\">\n    <std_but @pressed-button = \"clicked($event)\" class=\"flexbut\" text = \"C\"/>\n    <std_but @pressed-button = \"clicked($event)\" class=\"flexbut\" text = \"D\"/>\n    <std_but @pressed-button = \"clicked($event)\" class=\"flexbut\" text = \"E\"/>\n    <std_but @pressed-button = \"clicked($event)\" class=\"flexbut\" text = \"F\"/>\n    <std_but @pressed-button = \"clicked($event)\" class=\"flexbut\" text = \"G\"/>\n    <std_but @pressed-button = \"clicked($event)\" class=\"flexbut\" text = \"A\"/>\n    <std_but @pressed-button = \"clicked($event)\" class=\"flexbut\" text = \"B\"/>\n    <std_but @pressed-button = \"clicked($event)\" class=\"flexbut\" text = \"C\"/>\n  </div>\n\n  <p>\n    Your Input: \n  </p>\n\n  <p class=\"inputdisp\">{{this.script}} </p>\n\n  \n\n  <div class=\"noteInput\">\n    <std_but @pressed-button = \"reset()\" text = \"Reset\" class = \"flexbut\"/>\n    <std_but @pressed-button = \"submit()\" text = \"Submit\" class = \"flexbut\"/>\n  </div>\n\n\n \n</div>\n</template>\n\n<script>\nimport std_but from \"/src/components/std_but.vue\"\nimport axios from 'axios'\n\n  export default{\n    \n    name: 'musicInput',\n    data(){\n        return{\n            count:0,\n            script: ''\n        }\n    },\n    components:{\n      std_but,\n    },\n    methods:{\n        clicked(nextchar){\n          this.count++\n          this.script = this.script.concat(nextchar)\n        },\n        reset(){\n          this.script=''\n        },\n        async submitForm(){\n          console.log('submitted')\n          const request = {\n            type: 'MusicInTyped',\n            arguments: this.typedscript,\n          }\n          \n          await axios \n            .post('/api/typedrequest/', request)\n            .then(response =>{\n              console.log(response)\n            }).catch(error => {\n              console.log(error)\n            })\n        }\n    }\n       \n    }\n\n</script>\n\n\n<style>\n  h1{\n    font-family: Lato;\n    font: 38px;\n    font-weight: bold;\n    text-align: left;\n    margin-bottom: 3px;\n  }\n\n  hr {\n    border-top: 0.2px solid red;\n\n  }\n\n  h2{\n    font-family: Lato;\n    font: 36px;\n    font-weight: bold;\n    text-align: left;\n  }\n\n  p {\n    font-family: Noto Sans;\n    font: 20px;\n    font-weight: 500;\n    text-align: left;\n    max-width: 65ch;\n  }\n\n  .General{\n    margin: auto;\n    max-width: 65ch;\n    justify-content: center;\n  }\n\n  .noteInput{\n    display: flex ;\n    background-color: #ffffff;\n    border-radius: 10px;\n    margin:10px;\n    padding: 30px;\n    justify-content: center;\n  }\n\n  /* .noteInput > div {\n    background-color: #f1f1f1;\n    margin: 3px;\n    padding: 20px;\n    font-size: 20px;\n    text-align: center;\n    border-radius: 10px;\n    flex-grow: 1;\n  } */\n\n  .flexbut{\n    background-color: #26374a;\n    color:white;\n    margin: 3px;\n    padding: 20px;\n    font-size: 20px;\n    text-align: center;\n    border-radius: 4px;\n    flex-grow: 1;\n    border: none;\n  }\n\n.flexbut:hover {\n  background-color: #1c578a;\n  outline:none;\n  }\n\n.button:active {\n  background-color: #16446c;\n  outline:none;\n}\n\n.inputdisp{\n  min-height: 30px;\n}\n\n.entryBox {\n  width: 205px; height: 39px\n}\n\n\n  \n\n</style>\n\n\n"]},"metadata":{},"sourceType":"module"}